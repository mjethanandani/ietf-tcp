<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc
    xmlns:xi="http://www.w3.org/2001/XInclude"
    category="std"
    docName="draft-ietf-tcpm-yang-tcp-latest"
    ipr="trust200902"
    submissionType="IETF"
    consensus="true">
  <front>
    <title abbrev="YANG Model for TCP">A YANG Model for Transmission Control
    Protocol (TCP) Configuration and State</title>

    <author fullname="Michael Scharf" initials="M." surname="Scharf">
      <organization abbrev="Hochschule Esslingen">Hochschule Esslingen -
      University of Applied Sciences</organization>

      <address>
        <postal>
          <street>Kanalstr. 33</street>

          <code>73728</code>

          <city>Esslingen</city>

          <region/>

          <country>Germany</country>
        </postal>

        <!--<phone></phone>-->

        <email>michael.scharf@hs-esslingen.de</email>
      </address>
    </author>

    <author fullname="Mahesh Jethanandani" initials="M."
            surname="Jethanandani">
      <organization>Kloud Services</organization>

      <address>
        <email>mjethanandani@gmail.com</email>
      </address>
    </author>

    <author fullname="Vishal Murgai" initials="V." surname="Murgai">
      <organization>Samsung</organization>

      <address>
        <email>vmurgai@gmail.com</email>
      </address>
    </author>

    <date/>

    <area>Transport</area>

    <workgroup>TCPM</workgroup>

    <keyword>YANG</keyword>

    <abstract>
      <t>This document specifies a minimal YANG model for TCP on
      devices that are configured and managed by network management
      protocols. The YANG model defines a container for all TCP
      connections, and groupings of authentication
      parameters that can be imported and used in TCP implementations
      or by other models that need to configure TCP parameters. The
      model also includes basic TCP statistics. The model is compliant
      with Network Management Datastore Architecture (NMDA) (RFC
      8342).</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The <xref target="RFC9293">Transmission Control
      Protocol (TCP)</xref> is used by many applications in the Internet,
      including control and management protocols. As such, TCP is
      implemented on network elements that can be configured and managed
      via network management protocols such as
      <xref target="RFC6241">NETCONF</xref> or <xref
      target="RFC8040">RESTCONF</xref>.</t>

      <t>This document specifies a minimal <xref target="RFC7950">YANG
      1.1</xref> model for configuring and managing TCP on network
      elements that support YANG, a TCP connection table,
      a TCP listener table containing
      information about a particular TCP listener, and an augmentation
      of the <xref target="RFC8177">YANG Data Model for Key
      Chains</xref> to support authentication. The YANG module specified
      in this document is compliant with
      <xref target="RFC8342">Network Management Datastore Architecture (NMDA)</xref>.</t>

      <t>The YANG module has a narrow scope and focuses on a subset of
      fundamental TCP functions and basic statistics. It defines a
      container for a list of TCP connections that includes definitions from
      <xref target="I-D.ietf-netconf-tcp-client-server">YANG Groupings
      for TCP Clients and TCP Servers</xref>. The model adheres to
      the recommendation in <xref target="RFC4364">BGP/MPLS IP Virtual
      Private Networks</xref>. Therefore it allows enabling of <xref
      target="RFC5925">TCP-AO</xref>, and accommodates the installed
      base that makes use of MD5. The module can be augmented or
      updated to address more advanced or implementation-specific TCP
      features in the future.</t>

      <!--
      <t>Many protocol stacks on IP hosts use other methods to configure
      TCP, such as operating system configuration or policies. Many TCP/IP
      stacks cannot be configured by network management protocols such as
      <xref target="RFC6241">NETCONF</xref> or <xref
      target="RFC8040">RESTCONF</xref>. Moreover, many existing TCP/IP stacks
      do not use YANG data models. Such TCP implementations often have other
      means to configure the parameters listed in this document. Such other
      means are outside the scope of this document.</t>
      -->

      <t>This specification does not deprecate the <xref
      target="RFC4022">Management Information Base (MIB) for the Transmission
      Control Protocol (TCP)</xref>. The basic statistics defined in this
      document follow the model of the TCP MIB. An <xref target="RFC4898">TCP
      Extended Statistics MIB</xref> is also available, but this document does
      not cover such extended statistics. The YANG module also omits some
      selected parameters included in TCP MIB, most notably Retransmission
      Timeout (RTO) configuration and a maximum connection limit. This is a
      conscious decision as these parameters hardly matter in a
      state-of-the-art TCP implementation. It would also be possible to
      translate a MIB into a YANG module, for instance using <xref
      target="RFC6643">Translation of Structure of Management Information
      Version 2 (SMIv2) MIB Modules to YANG Modules</xref>. However, this
      approach is not used in this document, because a translated model would
      not be up-to-date.</t>

      <t>There are other existing TCP-related YANG models, which are
      orthogonal to this specification. Examples are:</t>

      <t><list style="symbols">
          <t>TCP header attributes are modeled in other security-related
          models, such as <xref target="RFC8519">YANG Data Model for Network
          Access Control Lists (ACLs)</xref>, <xref target="RFC8783">Distributed
          Denial-of-Service Open Thread Signaling (DOTS) Data Channel
          Specification</xref>,
          <xref target="I-D.ietf-i2nsf-capability-data-model">I2NSF Capability
          YANG Data Model</xref>, or
          <xref target="I-D.ietf-i2nsf-nsf-facing-interface-dm">I2NSF Network 
          Security Function-Facing Interface YANG Data Model</xref>.</t>

          <t>TCP-related configuration of a NAT (e.g., NAT44, NAT64,
          Destination NAT) is defined in <xref target="RFC8512">A YANG
          Module for Network Address Translation (NAT) and Network Prefix
          Translation (NPT)</xref> and <xref target="RFC8513">A YANG Data
          Model for Dual-Stack Lite (DS-Lite)</xref>.</t>

          <t>TCP-AO and TCP MD5 configuration for Layer 3 VPNs is modeled in
          <xref target="RFC9182">A Layer 3 VPN Network YANG
          Model</xref>. This model assumes that TCP-AO specific parameters
          are preconfigured in addition to the keychain parameters.</t>
        </list></t>
    </section>

    <section title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
      they appear in all capitals, as shown here.</t>

      <section title="Note to  RFC Editor">
        <t>This document uses several placeholder values throughout the
        document. Please replace them as follows and remove this note before
        publication.</t>

        <t>RFC XXXX, where XXXX is the number assigned to this document at the
        time of publication.</t>

        <t>YYYY-MM-DD with the actual date of the publication of this
        document.</t>
      </section>
    </section>

    <section title="YANG Module Overview">
      <section title="Scope">
        <t>TCP is implemented on different system architectures. As a
        result, there are many different and often
        implementation-specific ways to configure parameters of the
        TCP engine. In addition, in many TCP/IP stacks configuration
        exists for different scopes:</t>

        <t><list style="symbols">
            <t>System-wide configuration: Many TCP implementations have
            configuration parameters that affect all TCP
            connections from or to this TCP stack. Typical examples include
            enabling or disabling optional protocol features. For instance,
            many implementations can turn on or off use of window scaling
            <xref target="RFC9293">Transmission Control Protocol (TCP)
            Specification</xref> for all TCP connections.</t>

            <t>Interface configuration: It can be useful to use
            different TCP parameters on different interfaces, e.g.,
            different device ports or IP interfaces. In that case, TCP
            parameters can be part of the interface
            configuration. Typical examples are the Maximum Segment
            Size (MSS) or configuration related to hardware
            offloading.</t>

            <t>Connection parameters: Many implementations have means
            to influence the behavior of each TCP connection, e.g., on
            the programming interface used by applications. Typical
            examples are socket options in the socket API, such as
            disabling the Nagle algorithm <xref
            target="RFC9293">Transmission Control Protocol (TCP)
            Specification</xref> by TCP_NODELAY.  If an application
            uses such an interface, it is possible that the
            configuration of the application or application protocol
            includes TCP-related parameters. An example is the <xref
            target="I-D.ietf-idr-bgp-model">BGP YANG Model for Service
            Provider Networks </xref>.</t>

            <t>Application preferences: Setting of TCP parameters
            can also be part of application preferences, templates,
            or profiles. An example would be the preferences defined
            in <xref target="I-D.ietf-taps-interface">An Abstract
            Application Layer Interface to Transport Services</xref>.</t>
          </list></t>

        <t>As a result, there is no ground truth for setting certain TCP
        parameters, and traditionally different TCP implementations have used
        different modeling approaches. For instance, one implementation may
        define a given configuration parameter globally, while another one
        uses per-interface settings, and both approaches work well for the
        corresponding use cases. Also, different systems may use different
        default values. In addition, TCP can be implemented in different ways
        and design choices by the protocol engine often affect configuration
        options.</t>

        <t>Nonetheless, a number of TCP stack parameters require configuration
        by YANG models. This document therefore defines a minimal YANG model
        with fundamental parameters. An important use case is the TCP
        configuration on network elements such as routers, which often use YANG
        data models. The model therefore specifies TCP parameters that are
        important on such TCP stacks.</t>

        <t>This in particular applies to the support of <xref
        target="RFC5925">TCP-AO</xref> and the corresponding
        <xref target="RFC5926">cryptographic algorithms</xref>.
        TCP Authentication Option (TCP-AO) is
        used on routers to secure routing protocols such as BGP. In that case,
        a YANG model for TCP-AO configuration is required. The model defined
        in this document includes the required parameters for TCP-AO
        configuration, such as the values of SendID and RecvID. The
        keychain for TCP-AO can be modeled by the <xref target="RFC8177">YANG
        Data Model for Key Chains</xref>. The groupings defined in this document
        can be imported and used as part of such a preconfiguration.</t>

        <t>Given an installed base, the model also allows enabling of the
        legacy <xref target="RFC2385">TCP MD5</xref> signature option.
        The TCP MD5 signature option was obsoleted by TCP-AO in 2010. If current
        implementations require TCP authentication, it is RECOMMENDED to use 
        <xref target="RFC5925">TCP-AO</xref>.</t>

        <t>Similar to the <xref target="RFC4022">TCP MIB</xref>, this document
        also specifies basic statistics, a TCP connection list, and a TCP listener
        list.</t>

        <t><list style="symbols">
            <t>Statistics: Counters for the number of active/passive opens,
            sent and received TCP segments, errors, and possibly other detailed
            debugging information</t>

            <t>TCP connection list: Access to status information for all TCP
            connections. Note, the connection table is modeled as a list 
	    that is read-writeable, even though a connection cannot be
	    created by adding entries to the table. Similarly, deletion
	    of connections from this list is implementation-specific.</t>

            <t>TCP listener list: A list containing information about
            TCP listeners, i.e., applications willing to accept connections.</t>
          </list></t>

        <t>This allows implementations of <xref target="RFC4022">TCP
        MIB</xref> to migrate to the YANG model defined in this memo.
        Note that the TCP MIB does not include means to reset statistics, which
        are defined in this document. This is not a major addition, as a reset
        can simply be implemented by storing offset values for the counters.</t>

        <t>This version of the module does not model details of
        <xref target="RFC8684">Multipath TCP</xref>. This could be addressed
        in a later version of this document.</t>
      </section>

      <section title="Model Design">
        <t>The YANG model defined in this document includes definitions from
        the <xref target="I-D.ietf-netconf-tcp-client-server">YANG Groupings
        for TCP Clients and TCP Servers</xref>. Similar to that model, this
        specification defines YANG groupings. This allows reuse of these
        groupings in different YANG data models. It is intended that these
        groupings will be used either standalone or for TCP-based protocols as
        part of a stack of protocol-specific configuration models. An example
        could be the <xref target="I-D.ietf-idr-bgp-model">BGP YANG Model for
        Service Provider Networks </xref>.</t>
      </section>

      <section title="Tree Diagram">
        <t>This section provides an abridged tree diagram for the YANG
        module defined in this document. Annotations used in the
        diagram are defined in <xref target="RFC8340">YANG Tree
        Diagrams </xref>. A complete tree diagram can be found in the
        Appendix.</t>

        <figure>
          <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(../src/yang/ietf-tcp@YYYY-MM-DD-abridged-tree.txt)
]]></artwork>
        </figure>
      </section>
    </section>

    <section title="TCP YANG Model">
      <t>This YANG module references <xref target="RFC5925">
      The TCP Authentication Option</xref>, <xref target="RFC2385">
      Protection of BGP Sessions via the TCP MD5 Signature</xref>,
      <xref target="RFC9293">Transmission Control
      Protocol (TCP) Specification</xref>,
      and imports <xref target="RFC6991">Common YANG Data Types
      </xref>, <xref target="RFC8341">The NETCONF Access Control
      Model</xref>, and <xref target="I-D.ietf-netconf-tcp-client-server">
      YANG Groupings for TCP Clients and TCP Servers</xref>.</t>

      <t><figure>
          <artwork><![CDATA[
<CODE BEGINS> file "ietf-tcp@YYYY-MM-DD.yang"

INSERT_TEXT_FROM_FILE(../src/yang/ietf-tcp@YYYY-MM-DD.yang)

<CODE ENDS>]]></artwork>
        </figure></t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <section title="The IETF XML Registry">
        <t>This document registers an URI in the "ns" subregistry of the
        <xref target="RFC3688">IETF XML Registry </xref>. Following the format
        in <xref target="RFC3688">IETF XML Registry </xref>, the following
        registration is requested:</t>

        <t><figure>
            <artwork><![CDATA[
   URI: urn:ietf:params:xml:ns:yang:ietf-tcp
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
]]></artwork>
          </figure></t>
      </section>

      <section title="The YANG Module Names Registry">
        <t>The following entry is requested to be added to the
        "YANG Module Names" registry created by
        <xref target="RFC6020">YANG - A Data Modeling Language for
        the Network Configuration Protocol (NETCONF)</xref>:</t>

        <t><figure>
            <artwork><![CDATA[
   name:         ietf-tcp
   namespace:    urn:ietf:params:xml:ns:yang:ietf-tcp
   prefix:       tcp
   reference:    RFC XXXX (this document)
]]></artwork>
          </figure></t>
        <t>The registration is not maintained by IANA.</t>
      </section>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>The YANG module specified in this document defines a schema for data
      that is designed to be accessed via network management protocols such as
      <xref target="RFC6241">NETCONF</xref> or <xref target="RFC8040">RESTCONF
      </xref>. The lowest NETCONF layer is the secure transport layer, and the
      mandatory-to-implement secure transport is Secure Shell (SSH) described
      in <xref target="RFC6242">Using the NETCONF protocol over SSH </xref>.
      The lowest RESTCONF layer is HTTPS, and the mandatory-to-implement
      secure transport is <xref target="RFC8446">TLS </xref>.</t>

      <t>The <xref target="RFC8341">Network Configuration Access Control Model
      (NACM) </xref> provides the means to restrict access for particular
      NETCONF or RESTCONF users to a preconfigured subset of all available
      NETCONF or RESTCONF protocol operations and content.</t>

      <t>There are a number of data nodes defined in this YANG module that are
      writable/creatable/deletable (i.e., "config true", which is the
      default). These data nodes may be considered sensitive or vulnerable in
      some network environments. Write operations (e.g., edit-config) to these
      data nodes without proper protection can have a negative effect on
      network operations. These are the subtrees and data nodes and their
      sensitivity/vulnerability:</t>

      <t><list style="symbols">
        <t>Common configuration included from
        <xref target="I-D.ietf-netconf-tcp-client-server">NETCONF Client
	and Server Models </xref>. Unrestricted
        access to all the nodes, e.g., keepalive idle-timer,
        can cause connections to fail or to timeout prematurely.</t>

        <t>Authentication configuration. Unrestricted access to the nodes under
        authentication configuration can prevent the use of authenticated
        communication and cause connection setups to fail. This can result
        in massive security vulnerabilities and service disruption for the
        traffic requiring authentication.</t>
      </list></t>

      <t>Some of the readable data nodes in this YANG module may be considered
      sensitive or vulnerable in some network environments. It is thus
      important to control read access (e.g., via get, get-config, or
      notification) to these data nodes. These are the subtrees and data nodes
      and their sensitivity/vulnerability:</t>

      <t><list style="symbols">
          <t>Unrestricted access to connection information of the client or
          server can be used by a malicious user to launch an attack.</t>

          <t>Similarly, unrestricted access to statistics of the client or
          server can be used by a malicious user to exploit any
          vulnerabilities of the system.</t>
        </list></t>

      <t>Some of the RPC operations in this YANG module may be considered
      sensitive or vulnerable in some network environments. It is thus
      important to control access to these operations. These are the
      operations and their sensitivity/vulnerability:</t>

      <t><list style="symbols">
          <t>The YANG module allows for the statistics to be cleared by
          executing the reset action. This action should be restricted to
          users with the right permission.</t>
        </list></t>

      <t>The module specified in this document supports MD5 to basically
      accommodate the installed BGP base.  MD5 suffers from the security
      weaknesses discussed in Section 2 of <xref target="RFC6151">RFC 6151</xref>
      or Section 2.1 of <xref target="RFC6952">RFC 6952</xref>.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.2119.xml'?>

      <?rfc include='reference.RFC.2385.xml'?>

      <?rfc include='reference.RFC.3688.xml'?>

      <?rfc include='reference.RFC.5925.xml'?>

      <?rfc include='reference.RFC.5926.xml'?>

      <?rfc include='reference.RFC.6020.xml'?>

      <?rfc include='reference.RFC.6241.xml'?>

      <?rfc include='reference.RFC.6242.xml'?>

      <?rfc include='reference.RFC.6991.xml'?>

      <?rfc include='reference.RFC.7950.xml'?>

      <?rfc include='reference.RFC.8040.xml'?>

      <?rfc include='reference.RFC.8174.xml'?>

      <?rfc include='reference.RFC.8177.xml'?>

      <?rfc include='reference.RFC.8340.xml'?>

      <?rfc include='reference.RFC.8341.xml'?>

      <?rfc include='reference.RFC.8342.xml'?>

      <?rfc include='reference.RFC.8446.xml'?>

      <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9293.xml"/>

      <?rfc include='reference.I-D.ietf-netconf-tcp-client-server.xml'?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.4022.xml'?>

      <?rfc include='reference.RFC.4364.xml'?>

      <?rfc include='reference.RFC.4898.xml'?>

      <?rfc include='reference.RFC.6151.xml'?>

      <?rfc include='reference.RFC.6643.xml'?>

      <?rfc include='reference.RFC.6952.xml'?>

      <?rfc include='reference.RFC.8512.xml'?>

      <?rfc include='reference.RFC.8513.xml'?>

      <?rfc include='reference.RFC.8519.xml'?>

      <?rfc include='reference.RFC.8684.xml'?>

      <?rfc include='reference.RFC.8783.xml'?>

      <?rfc include='reference.RFC.9182.xml'?>

      <?rfc include='reference.RFC.9235.xml'?>

      <?rfc include='reference.I-D.ietf-idr-bgp-model.xml'?>

      <?rfc include='reference.I-D.ietf-taps-interface.xml'?>

      <?rfc include='reference.I-D.ietf-i2nsf-capability-data-model.xml'?>

      <?rfc include='reference.I-D.ietf-i2nsf-nsf-facing-interface-dm.xml'?>
    </references>

    <section anchor="app_ack" title="Acknowledgements">
      <t>Michael Scharf was supported by the StandICT.eu project, which is
      funded by the European Commission under the Horizon 2020 Programme.</t>

      <t>The following persons have contributed to this document by
      reviews (in alphabetical order): Mohamed Boucadair, Gorry Fairhurst,
      Jeffrey Haas, and Tom Petch.</t>
    </section>

    <section title="Examples">
      <section title="Keepalive Configuration">
        <t>This particular example demonstrates how both a particular
        connection can be configured for keepalives.</t>

        <t><figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(../src/yang/example-tcp-configuration-a.1.1.xml,69)

]]></artwork>
          </figure></t>
      </section>

      <section title="TCP-AO Configuration">
        <t>The following example demonstrates how to model a <xref
        target="RFC5925">TCP-AO</xref> configuration for the example in <xref
        target="RFC9235">TCP-AO Test Vectors</xref>. The
        IP addresses and other parameters are taken from the test vectors.</t>

        <t><figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(../src/yang/example-tcp-configuration-a.1.2.xml,69)

]]></artwork>
          </figure></t>
      </section>
    </section>

    <section title="Complete Tree Diagram">
      <t>Here is the complete tree diagram for the TCP YANG model.</t>

      <figure>
        <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(../src/yang/ietf-tcp@YYYY-MM-DD-tree.txt)

]]></artwork>
      </figure>
    </section>
  </back>
</rfc>
